SET SERVEROUTPUT ON ;
CREATE TABLE ALUMNO(NUMERO_CUENTA INTEGER PRIMARY KEY , NOMBRE VARCHAR2(25),PATERNO VARCHAR2(25));
   
 CREATE TABLE MATERIA(ID_MATERIA INTEGER, NOMBRE VARCHAR2(120), 
CONSTRAINT PK_ID_MATERIA PRIMARY KEY (ID_MATERIA));

CREATE TABLE EVALUACION(NUMERO_CUENTA INTEGER, ID_MATERIA INTEGER,CALIFICACION FLOAT, ESTATUS CHAR, 
CONSTRAINT FK1_NUMERO_CUENTA FOREIGN KEY (NUMERO_CUENTA)
REFERENCES ALUMNO(NUMERO_CUENTA),
CONSTRAINT FK2_ID_MATERIA FOREIGN KEY (ID_MATERIA)
REFERENCES MATERIA(ID_MATERIA));


CREATE SEQUENCE SEC_MATERIA
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

              
INSERT INTO ALUMNO VALUES(123,'JUAN','TORRES');
INSERT INTO ALUMNO VALUES(456,'DANIELA','MEZA');
INSERT INTO ALUMNO VALUES(759,'ARMANDO','CARDENAS');


CREATE OR REPLACE PROCEDURE GUARDAR_MATERIA(MY_ID_MATERIA OUT INTEGER, 
             MY_NOMBRE IN VARCHAR2)
              AS
              BEGIN
              SELECT SEC_MATERIA.NEXTVAL INTO MY_ID_MATERIA FROM DUAL;
              INSERT INTO MATERIA(ID_MATERIA,NOMBRE)
              VALUES (MY_ID_MATERIA,MY_NOMBRE);
              END;
              /




DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_MATERIA(valor,'BASE DE DATOS II');
GUARDAR_MATERIA(valor,'NEGOCIOS ELECTRONICOS');
GUARDAR_MATERIA(valor,'METODOLOGIA ESTRUCTURADA');
END;
/

SELECT *FROM EVALUACION;

CREATE OR REPLACE TRIGGER DIS_EVALUACION before INSERT ON EVALUACION FOR EACH ROW 
BEGIN 
IF :NEW.ESTATUS !='A' OR :NEW:ESTATUS!=R THEN
RAISE_APPLICATION_ERROR(-20001,'LA CALIFICACION NO ES CORRECTA');
ELSE
INSERT INTO EVALUACION VALUES(:NEW.CALIFICACION,:NEW.ESTATUS);
END IF;
